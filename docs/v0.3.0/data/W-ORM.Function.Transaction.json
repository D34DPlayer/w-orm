{"id":239,"name":"Transaction","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"transaction.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/transaction.ts","line":47,"character":22,"url":"https://github.com/D34DPlayer/w-orm/blob/117cac1/src/transaction.ts#L47"}],"signatures":[{"id":240,"name":"Transaction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts a db transaction.\nDepending on the result of the transactionCallback, the transaction will be committed or aborted."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Transaction('readwrite', async (tx) => {\n const newUser = await User.create({ name: 'John Doe' }, tx)\n const getUser = await User.get(newUser.id, tx)\n\n // Any error thrown in the callback will abort the transaction, this will rollback any changes made\n throw new Error('rollback')\n // If no error is thrown, the transaction will be committed\n})\n```"}]}]},"parameters":[{"id":241,"name":"mode","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The transaction mode"}]},"type":{"type":"reference","name":"IDBTransactionMode","qualifiedName":"IDBTransactionMode","package":"@types/web"},"text":{"comment":"<p>The transaction mode</p>\n"}},{"id":242,"name":"transactionCallback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The callback to execute in the transaction"}]},"type":{"type":"reference","id":43,"name":"TransactionCallback"},"text":{"comment":"<p>The callback to execute in the transaction</p>\n"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"W-ORM.Function.Transaction","hash":"Transaction"},"text":{"comment":"<p>Starts a db transaction.\nDepending on the result of the transactionCallback, the transaction will be committed or aborted.</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">await</span> <span class=\"pl-en\">Transaction</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>readwrite<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">async</span> (<span class=\"pl-v\">tx</span>) <span class=\"pl-k\">=></span> {\n <span class=\"pl-k\">const</span> <span class=\"pl-c1\">newUser</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-smi\">User</span>.<span class=\"pl-en\">create</span>({ name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>John Doe<span class=\"pl-pds\">'</span></span> }, <span class=\"pl-smi\">tx</span>)\n <span class=\"pl-k\">const</span> <span class=\"pl-c1\">getUser</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-smi\">User</span>.<span class=\"pl-c1\">get</span>(<span class=\"pl-smi\">newUser</span>.<span class=\"pl-c1\">id</span>, <span class=\"pl-smi\">tx</span>)\n\n <span class=\"pl-c\">// Any error thrown in the callback will abort the transaction, this will rollback any changes made</span>\n <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">Error</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rollback<span class=\"pl-pds\">'</span></span>)\n <span class=\"pl-c\">// If no error is thrown, the transaction will be committed</span>\n})\n</code></pre>\n"},"sources":[{"fileName":"transaction.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/transaction.ts","line":47,"character":0,"url":"https://github.com/D34DPlayer/w-orm/blob/117cac1/src/transaction.ts#L47"}],"parentId":239}],"is":{"declaration":true},"location":{"query":"W-ORM.Function.Transaction","hash":""},"text":{},"parentId":1}
