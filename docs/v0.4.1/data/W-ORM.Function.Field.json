{"id":92,"name":"Field","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"fields.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/fields.ts","line":44,"character":16,"url":"https://github.com/D34DPlayer/w-orm/blob/f565d3b/src/fields.ts#L44"}],"signatures":[{"id":93,"name":"Field","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes a field on a model.\n\nMultiple options can be passed to the decorator:\n - "},{"kind":"code","text":"`primaryKey`"},{"kind":"text","text":": Whether the field is the primary key of the model,\n                 if multiple fields are marked as primary key, their combination will be the key.\n - "},{"kind":"code","text":"`unique`"},{"kind":"text","text":": Whether the field has an unique constraint. This will be enforced by the database.\n - "},{"kind":"code","text":"`nullable`"},{"kind":"text","text":": Whether the field can be null, primary keys cannot be nullable.\n - "},{"kind":"code","text":"`default`"},{"kind":"text","text":": The default value of the field, it can be a value or a function that returns the value.\n - "},{"kind":"code","text":"`type`"},{"kind":"text","text":": The type of the field, it is automatically inferred with typescript.\n - "},{"kind":"code","text":"`index`"},{"kind":"text","text":": Whether the field should be indexed, it is recommended to keep it unless the type isn't indexable (eg. a Blob)."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\n{\n  primaryKey: false,\n  unique: false,\n  nullable: !primaryKey,\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nclass User extends Model {\n  @Field({ primaryKey: true })\n  id: number\n  @Field({ unique: true })\n  username: string\n  @Field({ default: 0 })\n  balance: number\n  @Field({ default: () => new Date() })\n  createdAt: Date\n  @Field({ index: false })\n  profilePicture: Blob\n}\n```"}]}]},"typeParameter":[{"id":94,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":95,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":94,"name":"T"}],"name":"FieldOptions"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},"defaultValue":"{}","text":{}}],"type":{"type":"reference","name":"PropertyDecorator","qualifiedName":"PropertyDecorator","package":"typescript"},"is":{"declaration":false},"location":{"query":"W-ORM.Function.Field","hash":"Field"},"text":{"comment":"<p>Describes a field on a model.</p>\n<p>Multiple options can be passed to the decorator:</p>\n<ul>\n<li><code>primaryKey</code>: Whether the field is the primary key of the model,\n          if multiple fields are marked as primary key, their combination will be the key.</li>\n<li><code>unique</code>: Whether the field has an unique constraint. This will be enforced by the database.</li>\n<li><code>nullable</code>: Whether the field can be null, primary keys cannot be nullable.</li>\n<li><code>default</code>: The default value of the field, it can be a value or a function that returns the value.</li>\n<li><code>type</code>: The type of the field, it is automatically inferred with typescript.</li>\n<li><code>index</code>: Whether the field should be indexed, it is recommended to keep it unless the type isn&#39;t indexable (eg. a Blob).</li>\n</ul>\n<h5>Default:</h5><pre><code class=\"language-js\">{\n  primaryKey<span class=\"pl-k\">:</span> <span class=\"pl-c1\">false</span>,\n  unique<span class=\"pl-k\">:</span> <span class=\"pl-c1\">false</span>,\n  nullable<span class=\"pl-k\">:</span> <span class=\"pl-k\">!</span>primaryKey,\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">User</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">Model</span> {\n  @<span class=\"pl-en\">Field</span>({ primaryKey: <span class=\"pl-c1\">true</span> })\n  <span class=\"pl-v\">id</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">number</span>\n  @<span class=\"pl-en\">Field</span>({ unique: <span class=\"pl-c1\">true</span> })\n  <span class=\"pl-v\">username</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">string</span>\n  @<span class=\"pl-en\">Field</span>({ default: <span class=\"pl-c1\">0</span> })\n  <span class=\"pl-v\">balance</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">number</span>\n  @<span class=\"pl-en\">Field</span>({ <span class=\"pl-en\">default</span>: () <span class=\"pl-k\">=></span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>() })\n  <span class=\"pl-v\">createdAt</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Date</span>\n  @<span class=\"pl-en\">Field</span>({ index: <span class=\"pl-c1\">false</span> })\n  <span class=\"pl-v\">profilePicture</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Blob</span>\n}\n</code></pre>\n"},"sources":[{"fileName":"fields.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/fields.ts","line":44,"character":0,"url":"https://github.com/D34DPlayer/w-orm/blob/f565d3b/src/fields.ts#L44"}],"parentId":92}],"is":{"declaration":true},"location":{"query":"W-ORM.Function.Field","hash":""},"text":{},"parentId":1}
