{"id":14,"name":"FieldOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes a field on a model.\n\nMultiple options can be passed to the decorator:\n - "},{"kind":"code","text":"`primaryKey`"},{"kind":"text","text":": Whether the field is the primary key of the model,\n                 if multiple fields are marked as primary key, their combination will be the key.\n - "},{"kind":"code","text":"`unique`"},{"kind":"text","text":": Whether the field has an unique constraint. This will be enforced by the database.\n - "},{"kind":"code","text":"`nullable`"},{"kind":"text","text":": Whether the field can be null, primary keys cannot be nullable.\n - "},{"kind":"code","text":"`default`"},{"kind":"text","text":": The default value of the field, it can be a value or a function that returns the value.\n - "},{"kind":"code","text":"`type`"},{"kind":"text","text":": The type of the field, it is automatically inferred with typescript."}]},"children":[{"id":18,"name":"default","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":30,"character":2,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L30"}],"type":{"type":"union","types":[{"type":"reference","id":24,"name":"T"},{"type":"reflection","declaration":{"id":19,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"types.ts","line":30,"character":17,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L30"}],"signatures":[{"id":20,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":24,"name":"T"}}]}}]},"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":"default"},"text":{},"parentId":14},{"id":17,"name":"nullable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":29,"character":2,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L29"}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":"nullable"},"text":{},"parentId":14},{"id":15,"name":"primaryKey","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":27,"character":2,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L27"}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":"primaryKey"},"text":{},"parentId":14},{"id":21,"name":"type","kind":4096,"kindString":"Property","flags":{},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":31,"character":2,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L31"}],"type":{"type":"reflection","declaration":{"id":22,"name":"type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"types.ts","line":31,"character":8,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L31"}],"signatures":[{"id":23,"name":"type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":24,"name":"T"},"is":{"declaration":false},"location":{"query":"Types.Interface.FieldOptions","hash":"type.__type"},"text":{},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":31,"character":8,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L31"}],"parentId":14}],"location":{"query":"Types.Interface.FieldOptions","hash":"type"}}},"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":"type"},"text":{},"parentId":14},{"id":16,"name":"unique","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":28,"character":2,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L28"}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":"unique"},"text":{},"parentId":14}],"groups":[{"title":"Properties","children":[18,17,15,21,16]}],"sources":[{"fileName":"types.ts","fullFileName":"/home/runner/work/w-orm/w-orm/src/types.ts","line":26,"character":17,"url":"https://github.com/D34DPlayer/w-orm/blob/ed33e4f/src/types.ts#L26"}],"typeParameters":[{"id":24,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"is":{"declaration":true},"location":{"query":"Types.Interface.FieldOptions","hash":""},"text":{"comment":"<p>Describes a field on a model.</p>\n<p>Multiple options can be passed to the decorator:</p>\n<ul>\n<li><code>primaryKey</code>: Whether the field is the primary key of the model,\n          if multiple fields are marked as primary key, their combination will be the key.</li>\n<li><code>unique</code>: Whether the field has an unique constraint. This will be enforced by the database.</li>\n<li><code>nullable</code>: Whether the field can be null, primary keys cannot be nullable.</li>\n<li><code>default</code>: The default value of the field, it can be a value or a function that returns the value.</li>\n<li><code>type</code>: The type of the field, it is automatically inferred with typescript.</li>\n</ul>\n"},"parentId":2,"hierarchy":[{"name":"FieldOptions","isTarget":true,"linkId":"14"}]}
